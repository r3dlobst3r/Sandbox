#########################################################################
# Title:            Sandbox: Logarr                                     #
# Author(s):        Superduper09, Kalroth, RXWatcher, kowalski          #
# URL:              https://github.com/saltyorg/Sandbox                 #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
################################
# Basics
################################

logarr_name: logarr

################################
# Paths
################################

logarr_role_paths_folder: "{{ logarr_name }}"
logarr_role_paths_location: "{{ server_appdata_path }}/{{ logarr_role_paths_folder }}"
logarr_role_paths_config_location: "{{ logarr_role_paths_locationlookup }}/userdata/config.json"
logarr_role_paths_folders_list:
  - "{{ logarr_role_paths_location }}"
  - "{{ logarr_role_paths_location }}/config"
  - "{{ logarr_role_paths_location }}/userdata"

################################
# Web
################################

logarr_role_web_subdomain: "{{ logarr_name }}"
logarr_role_web_domain: "{{ user.domain }}"
logarr_role_web_port: "80"
logarr_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='logarr') + '.' + lookup('role_var', '_web_domain', role='logarr')
                      if (lookup('role_var', '_web_subdomain', role='logarr') | length > 0)
                      else lookup('role_var', '_web_domain', role='logarr')) }}"

################################
# DNS
################################

logarr_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='logarr') }}"
logarr_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='logarr') }}"
logarr_role_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

logarr_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
logarr_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
logarr_role_traefik_middleware_custom: ""
logarr_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
logarr_role_traefik_enabled: true
logarr_role_traefik_api_enabled: false
logarr_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
logarr_role_docker_container: "{{ logarr_name }}"

# Image
logarr_role_docker_image_pull: true
logarr_role_docker_image_tag: "latest"
logarr_role_docker_image_repo: "monitorr/logarr-alpha"
logarr_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='logarr') }}:{{ lookup('role_var', '_docker_image_tag', role='logarr') }}"

# Envs
logarr_role_docker_envs_default:
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  TZ: "{{ tz }}"
logarr_role_docker_envs_custom: {}
logarr_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='logarr')
                             | combine(lookup('role_var', '_docker_envs_custom', role='logarr')) }}"

# Volumes
logarr_role_docker_volumes_default:
  - "{{ lookup('role_var', '_paths_location', role='logarr') }}:/app"
  - "{{ lookup('role_var', '_paths_location', role='logarr') }}/config:/config"
  - "{{ server_appdata_path }}:/opt"
logarr_role_docker_volumes_custom: []
logarr_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='logarr')
                                + lookup('role_var', '_docker_volumes_custom', role='logarr') }}"

# Hostname
logarr_role_docker_hostname: "{{ logarr_name }}"

# Networks
logarr_role_docker_networks_alias: "{{ logarr_name }}"
logarr_role_docker_networks_default: []
logarr_role_docker_networks_custom: []
logarr_role_docker_networks: "{{ docker_networks_common
                                 + lookup('role_var', '_docker_networks_default', role='logarr')
                                 + lookup('role_var', '_docker_networks_custom', role='logarr') }}"

# Restart Policy
logarr_role_docker_restart_policy: unless-stopped

# State
logarr_role_docker_state: started
