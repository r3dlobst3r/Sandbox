#########################################################################
# Title:            Sandbox: A-Train                                    #
# Author(s):        hackmonker                                          #
# URL:              https://github.com/saltyorg/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---

- name: Settings | Check if `{{ lookup('role_var', '_paths_sa_location', role='a_train') | basename }}` exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_sa_location', role='a_train') }}"
  register: a_train_sa

- name: Settings | Check if `{{ lookup('role_var', '_paths_config_location', role='a_train') | basename }}` exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_config_location', role='a_train') }}"
  register: a_train_config

- name: "Fail when 'account.json' is `not present`"
  ansible.builtin.fail:
    msg: "You need to setup your service account file. Create a service account, add it to the team drives you wish to monitor and copy the json file as 'account.json' to `{{ lookup('role_var', '_paths_location', role='a_train') }}`"
  when: (not a_train_sa.stat.exists) and (not continuous_integration)

- name: "Fail when remotes are `not added`"
  ansible.builtin.fail:
    msg: "You need to add remotes you wish to monitor in the settings file."
  when: ("" in a_train.remotes) and (not a_train_config.stat.exists) and (not continuous_integration)

- name: Settings | New `{{ lookup('role_var', '_paths_config_location', role='a_train') | basename }}` tasks
  when: (not a_train_config.stat.exists) and (not continuous_integration)
  block:
    - name: Import Settings task
      ansible.builtin.import_tasks: "config.yml"

    - name: Settings | Import default `{{ lookup('role_var', '_paths_config_location', role='a_train') | basename }}`
      ansible.builtin.template:
        src: a-train.toml.j2
        dest: "{{ lookup('role_var', '_paths_config_location', role='a_train') }}"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "0664"
