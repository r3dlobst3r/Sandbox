#########################################################################
# Title:            Sandbox: Jellystat                                  #
# Author(s):        salty                                               #
# URL:              https://github.com/saltyorg/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('role_var', '_dns_record') }}"
    dns_zone: "{{ lookup('role_var', '_dns_zone') }}"
    dns_proxy: "{{ lookup('role_var', '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Check if JWT secret file exists
  ansible.builtin.stat:
    path: "{{ jellystat_role_paths_jwt_secret_file }}"
  register: jwt_file

- name: Generate JWT Token Secret
  ansible.builtin.shell: openssl rand -base64 32
  register: jwt_secret
  when: not jwt_file.stat.exists

- name: Store JWT Token Secret in a file
  ansible.builtin.copy:
    content: "{{ jwt_secret.stdout }}"
    dest: "{{ jellystat_role_paths_jwt_secret_file }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0664"
  when: not jwt_file.stat.exists

- name: Read JWT Token Secret from file
  ansible.builtin.shell: cat "{{ jellystat_role_paths_jwt_secret_file }}"
  register: jwt_token
  changed_when: false

- name: PostgreSQL Role
  ansible.builtin.include_role:
    name: postgres
  vars:
    postgres_instances: ["{{ jellystat_postgres_name }}"]
    postgres_role_docker_env_db: "{{ jellystat_postgres_role_docker_env_db }}"
    postgres_role_docker_image_tag: "{{ jellystat_postgres_role_docker_image_tag }}"
    postgres_role_docker_image_repo: "{{ jellystat_postgres_role_docker_image_repo }}"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"
