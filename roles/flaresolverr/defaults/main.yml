##########################################################################
# Title:            Sandbox: Flaresolverr                                #
# Author(s):        Grostim, kowalski                                    #
# URL:              https://github.com/saltyorg/Sandbox                  #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

flaresolverr_name: flaresolverr

################################
# Docker
################################

# Container
flaresolverr_role_docker_container: "{{ flaresolverr_name }}"

# Image
flaresolverr_role_docker_image_pull: true
flaresolverr_role_docker_image_repo: "ghcr.io/flaresolverr/flaresolverr"
flaresolverr_role_docker_image_tag: "latest"
flaresolverr_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='flaresolverr') }}:{{ lookup('role_var', '_docker_image_tag', role='flaresolverr') }}"

# Envs
flaresolverr_role_docker_envs_default:
  LOG_LEVEL: "info"
  LOG_HTML: "false"
  CAPTCHA_SOLVER: "hcaptcha-solver"
  TZ: "{{ tz }}"
flaresolverr_role_docker_envs_custom: {}
flaresolverr_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='flaresolverr')
                                   | combine(lookup('role_var', '_docker_envs_custom', role='flaresolverr')) }}"

# Hostname
flaresolverr_role_docker_hostname: "{{ flaresolverr_name }}"

# Networks
flaresolverr_role_docker_networks_alias: "{{ flaresolverr_name }}"
flaresolverr_role_docker_networks_default: []
flaresolverr_role_docker_networks_custom: []
flaresolverr_role_docker_networks: "{{ docker_networks_common
                                       + lookup('role_var', '_docker_networks_default', role='flaresolverr')
                                       + lookup('role_var', '_docker_networks_custom', role='flaresolverr') }}"

# Restart Policy
flaresolverr_role_docker_restart_policy: unless-stopped

# State
flaresolverr_role_docker_state: started
